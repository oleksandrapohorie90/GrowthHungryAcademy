1a: Encrypt the message "DO NOT PASS GO" using Caesar cipher (k = 3)
Step 1: Convert to Numbers
Plaintext = DO NOT PASS GO
→ D=3, O=14, N=13, O=14, T=19, P=15, A=0, S=18, S=18, G=6, O=14
Spaces are ignored.
So, numeric = [3, 14, 13, 14, 19, 15, 0, 18, 18, 6, 14]

Step 2: Apply Encryption Function
f(p) = (p + 3) mod 26
→ [6, 17, 16, 17, 22, 18, 3, 21, 21, 9, 17]

Step 3: Convert Back to Letters
→ G R Q R W S D V V J R

Ciphertext: "GRQRW SD VVR JR"

26 is a part of the cipher’s definition and protects the logic for other cases
===============================================================================
4a: Decrypt the message "EOXH MHDQV" using Caesar cipher (k = 3)
Step 1: Convert to Numbers
E=4, O=14, X=23, H=7, M=12, H=7, D=3, Q=16, V=21
→ [4, 14, 23, 7, 12, 7, 3, 16, 21]

Step 2: Apply Decryption Function
f⁻¹(c) = (c - 3) mod 26
→ [1, 11, 20, 4, 9, 4, 0, 13, 18]

Step 3: Convert Back to Letters
→ B L U E J E A N S

Plaintext: "BLUE JEANS"
===============================================================================
7: Cryptanalyze the cipher "DY CVOOZ ZOBMRKXMO DY NBOKW"
Step 1: Frequency Analysis
Most frequent = O (3 times), assume it maps to 'E' (most frequent English letter) A=0, B=1, C=2, D=3, E=4
O = 14, E = 4 → shift k = 14 - 4 = 10

Step 2: Decrypt with k = 10
Use f⁻¹(c) = (c - 10) mod 26
Decrypted ciphertext becomes:
Word: DY
D = 3 → (3 - 10) % 26 = -7 → 19 → T

Y = 24 → (24 - 10) % 26 = 14 → O → DY → TO

Word: CVOOZ
C = 2 → (2 - 10) % 26 = -8 → 18 → S

V = 21 → (21 - 10) % 26 = 11 → L

O = 14 → (14 - 10) % 26 = 4 → E

O = 14 → 4 → E

Z = 25 → (25 - 10) = 15 → P → CVOOZ → SLEEP

Word: ZOBMRKXMO
Decrypting each:

Z = 25 → 15 → P

O = 14 → 4 → E

B = 1 → -9 → 17 → R

M = 12 → 2 → C

R = 17 → 7 → H

K = 10 → 0 → A

X = 23 → 13 → N

M = 12 → 2 → C

O = 14 → 4 → E
→ ZOBMRKXMO → PERCHANCE

Word: DY again → already did → TO
Word: NBOKW
N = 13 → 3 → D

B = 1 → -9 → 17 → R

O = 14 → 4 → E

K = 10 → 0 → A

W = 22 → 12 → M
→ NBOKW → DREAM

Plaintext:
“TO SLEEP PERCHANCE TO DREAM”
===============================================================================
11: What is the decryption function of the Affine Cipher if the Encryption Function
is: c = (ap + b) mod 26, where a = 15, b = 13
To decrypt, find modular inverse of a = 15 mod 26

Step 1: Find a⁻¹ mod 26 15 × 7 ≡ 1 mod 26 -> ≡ is congruent to or has the same remainder as, 15 * 7 ≡ 1 mod 26, 15 times 7 leaves a remainder of 1 when divided by 26
What number can I multiply a by so that the result is 1 mod m? 15⁻¹ mod 26, find x such that 15 * x ≡ 1 mod 26 => its 7 is called the modular inverse of 15 mod 26
  15 × 7 = 105 ≡ 1 mod 26
  → a⁻¹ = 7

Step 2: Construct Decryption Function
  p = a⁻¹(c - b) mod 26
  → p = 7(c - 13) mod 26
  Can also be written as:
  → p = (7c + 13) mod 26

Decryption Function:
p = 7(c - 13) mod 26
p = (7c + 13) mod 26
===============================================================================
Exercise 24: Encrypt “ATTACK” using RSA (n = 2537, e = 13)
Step 1: Translate to Numbers (2-digit blocks)
A=00, T=19, C=02, K=10
Blocks = "AT", "TA", "CK" → 0019, 1900, 0210
→ M₁ = 19, M₂ = 1900, M₃ = 210

Step 2: Encrypt each block using c = Mᵉ mod n

M₁ = 19 → C₁ = 19¹³ mod 2537 = 1819

M₂ = 1900 → C₂ = 1900¹³ mod 2537 = 1415

M₃ = 210 → C₃ = 210¹³ mod 2537 = 0981

Ciphertext blocks:
→ 1819 1415 0981

===============================================================================
Exercise 29: Diffie-Hellman Key Exchange (p = 23, a = 5)
Alice: k₁ = 8
Bob: k₂ = 5

Step 1: Alice computes public value
A = 5⁸ mod 23 = 390625 mod 23 = 16

Step 2: Bob computes public value
B = 5⁵ mod 23 = 3125 mod 23 = 20

Step 3: Shared Key Computation

Alice computes: s = 20⁸ mod 23 = 18

Bob computes: s = 16⁵ mod 23 = 18

Shared Key: 18