4.6
==========
🔒 Encryption
→ Hides the original message.
→ You take plaintext (the original readable message) and scramble it into ciphertext (nonsense-looking code) using a key or formula.

🔤 Example:

Plaintext: HELLO

After Caesar cipher with shift +3: KHOOR

🧠 Think of it like locking a message.

🔓 Decryption
→ Reveals the original message.
→ You take ciphertext and unscramble it back into plaintext using the same key (or related key).

🔤 Example:

Ciphertext: KHOOR

After Caesar cipher with shift -3: HELLO

🧠 Think of it like unlocking a message.
==========================================
Action	Input	Output	Purpose
Encryption	Plaintext	Ciphertext	To hide or protect a message
Decryption	Ciphertext	Plaintext	To read the original message
🔐 Real-Life Analogy:
Encryption = Locking a box with a key 🔑

Decryption = Unlocking the box with the same key 🗝️
==========================================

alphabet A=0, B=1,...Z=25
key(shift value): k=3 (Caeser cipher)
"CAT"
C -> 2
A -> 0
T -> 19
Convert to SECRET
Apply encryption function f(p) = (p+k) mod 26 to each letter
C -> 2: f(2) = (2+3) mod 26 = 5 mod 26 = 5(5 corresponds to F)
A -> 0: f(0) = (0+3) mod 26 = 3 mod 26 = 3 (3 corresponds to D)
T -> 19: f(19) = (19+3) mod 26 = 22 mod 26 = 22 (22 corresponds to 'W')

Convert back to PLAIN TEXT
Convert numbers back to letters
5 -> F
3 -> D
22 -> W
f^-1(p) = (p-k) mod 26 to each number
For 'F' (p=5): f^-1(5) = (5-3) mod 26 = 2 mod 26 = 2(2='C')
For 'D' (p=3): f^-1(3) = (3-3) mod 26 = 0 mod 26 = 0(0='A')
For 'F' (p=22): f^-1(22) = (22-3) mod 26 = 19 mod 26 = 19(2='T') => CAT
=====================================
Affine Cipher Example
Encryption funtcion: f(p) = (7p+3) mod 26 Here a=7,b=3
Plaintext letter 'K'
1. convert letter to num: K -> 10
2. Apply encryption function:
f(10) = (7 * 10 + 3) mod 26 = (70 + 3) mod 26 = 73 mod 26
   73 = 2*26 +21, so 73 mod 26 = 21
3. convert num back to letter
21 -> V
4. Ciphertext "V" Letter 'K' is encrypted as 'V'


To decrypt V back to K => p = a(c-b) mod 26, we need to find the inverse of a=7 mod 26, using extended euclidean algo or by trial and error
7*15=105=4*26+1 congruence sign 1 (mod 26)
==============================

1. Convert ciphertext letter to number
V -> 21
2. apply decryption function
f^-1(21) = 15 * (21-3) mod 26 = 15 * (18) mod 26 = 270 mod 26
270 = 10 * 26 +10, so 270 mod 26 = 10
3. convert num back to letter
10 -> K
plaintext: "K"
==============================
RSA crypto system: the public key revolution - SECURE bc of the difficulty of factoring large numbers
Ciphertext C = M^e mod n
use efficient modular exponentiation like exponentiation by squaring Algorithms sec 4.2
To decrypt M=C^d mod n
use efficient modular exponentiation
===============================
Real world uses for establishing secure channels:
SSH(Secure shell) - Diffie Hellman
TS/HTTPS(Secure web browsing)
VPN's(Virtual private networks)
Instant Messaging Apps(whats up) - use Diffie Hellman


Classical Ciphers - illustrative foundations, educational tools
Shift and Affine ciphers - understanding basic encryption, decryption and thei weakness(frequency analysis)

RSA - public key cryptography - key generation, encryption, decryption, security based on factoring
public key encryption and digital signatures - the workhorse for secure identity and confidentiality on the internet

Diffie-Hellman: key exchange - secure key agreement, security based on discrete logarithms
secure key agreement - the magic that allows secure communication to begin in the first place





