DSL - language that is designed for a certain domain, definition of language that is defined by some rules

DSL - rules
Expression:
    Structure: <operator><operand1><operand2>
Operator:
    Must be one of the defined operators: ADD, SUB, MUL, DIV
Operands:
    Must be valid integers

==============================
BNF form for above simple language
1.every line is an expression
<expression> ::= <operator><operand><operand>
2.lets define what is operator, only 4 of below options are possible for every line of our language
<operator> ::= "ADD" | "SUB" | "MUL" | "DIV"
3.lets define what is operand - basically is just an integer
<operand> ::= <integer>
4. define what is integer, optionally misnus in front [], either nothing or minus
<integer> ::= ["-"]<one_to_nine> {digit} **NOTE dont cover 0, triple thing
<digit> ::= "0" | <one_to_nine>
<one_to_nine> ::= "1" | "2" |"3" |"4" |"5" |"6" |"7" |"8" |"9"

=====================
Number: [sign] digits [fractional part] -2,3,3.3,-45.56,5.0, -0.5

<number> ::= <integer>[<fractional>]
<fractional> ::= "."<digit>+
<integer> ::= ["."](<one_to_nine>{digit}|"0")
<digit>   ::= "0" | <one_to_nine>
<one_to_nine> ::= "1"|"2"|"3"|"4"|"5"|"6"|"7"|"8"|"9"