multiplication has to go first before adding
all operators, all parameters are not changing only int part will
you change based on new requirements and not the whole thing
Part 1
====================================
1. expression needs to capture precedence of operations and handle expressions recursively. <expression> handles addition and subtraction (lowest precedence)
5 + 6 * 3 - 4 / 2
<expression> ::= <term> (("ADD" | "SUB") <term>)*

2.lets define what is term ? <term> ensures multiplication and division are handled first (higher precedence).
<term> ::= <factor> (("MUL" | "DIV") <factor>)*

3.lets define what is factor? <factor> represents an integer (a single value) Also, <operand> ::= <integer> is not needed since <factor> already handles it
<factor> ::= <integer>

4. define what are the operators
<operator> ::= "ADD" | "SUB" | "MUL" | "DIV"

5. define what integers are accepted
<integer> ::= ["-"]<one_to_nine> {digit}

6. define nums and include 0 handling
<digit> ::= "0" | <one_to_nine>

7.
<one_to_nine> ::= "1" | "2" |"3" |"4" |"5" |"6" |"7" |"8" |"9"
=> 1
<expression> ::= <term> (("ADD" | "SUB") <term>)*
<term> ::= <factor> (("MUL" | "DIV") <factor>)*
<factor> ::= <integer>
<operator> ::= "ADD" | "SUB" | "MUL" | "DIV"
<integer> ::= ["-"]<one_to_nine> {<digit>}
<digit> ::= "0" | <one_to_nine>
<one_to_nine> ::= "1" | "2" |"3" |"4" |"5" |"6" |"7" |"8" |"9"

Part 2
interpret, execute each line
we only need BNF form for this language

