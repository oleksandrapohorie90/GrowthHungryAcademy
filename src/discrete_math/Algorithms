How would you describe your algorithm in simple English ? -Pseudocode(smth btw english and real code)
1. List all steps used by Algorithm 1 to find the max ?
procedure max (a1,a2,an: integers)
max=nums,
 foreach n : nums
    if max < n {max=n}
    return max

 Algorithms are finite as well - should produce an output after a finite number for any input:
 (1)input/(2)output/(3)correct/(4)finitenize

 a) procedure double (n: positive int)
 while n>0
 n:=2n -> this loop is Infinite, not finite (4)

 b) procedure divide (n: positive int)
     while n>=0 -> it will finish but w/ runtime error, divides by 0
     m:=1/n     -> (3) (2)
     n:=n-1

 c) procedure sum (n: positive int)
     sum:=0
     while i < 10
     sum:=sum+i -> we dont see i++, no input(1), output ->(2), not correct(3), not finite(4)

 d) procedure choose (a,b: int)
 x: = either a or b
return x     -> looks correct
=========================================================
examples of algos problems: searching, sorting, optimization

1. Algorithm in increasing order and produce the list of all values that occur more than once:

procedure moreThanOnce(a1,a2,a3,...an: integer list)
answer = empty list -> use set(Hashset)
for i=2 to n
    if ai==ai-1           O(1)
    answer.append(ai) instead answer.insert(ai)

return answer

procedure duplicates(a1,a2,...: int in nondecreasing order)
K:=0{this counts the duplicates}
j:=2
while j<=n
if aj=aj-1 then
        k:=k+1
        ck := aj
        while j<=n and aj=ck
                j:=j+1
        j:=j+1
       {c1,c2,....,ck is the desired list}
You start at the 2nd element of each segment,you compare it with the prev segment if they are equal, then this element appears at least twice, you add it to the answer, you skip over all of this equal elements(if you have a segment of ones, you skip all of them) then you start at the 2nd element after the current segment and keep doing the same

2. Palindrome a: string = "abba"
                            ji
procedure palindrome check(a1,a2,...an: string)
answer :=true
for i:=1 to floor n/2 floor
    if ai !=an+1-i then answer := false
    return answer (answer is true if and onlyif string is a palindrome)
 i or j can be used instead of a1 a2
 ======================================
 Searching algos
 1. Linear
 2. Binary====================================================================
procedure binary search(x: int, a1,a2...an:increasing int)
    i:=1{i is the left endpoint of interval}
    j:=n{j is right endpoint of interval}

while i<j
        m:=floor(i+j)/2floor
        if x>am then i:=m+1 else j:=m
   if x=ai then location :=i else location:=0
   return location

44. Binary search for determining the correct position in which to insert a new element in an already sorted list

